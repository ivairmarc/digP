
import base64, codecs
magic = 'from io import BytesIO
import os
import csv
import time
import numpy as np
import yaml
import mss
import datetime
import pyautogui
import pandas as pd
from random import random
from os import error, listdir
import PySimpleGUI as sg
from pathlib import  Path
from selenium import webdriver
from src.logger import logger, loggerMapClicked
from cv2 import cv2
from bs4 import BeautifulSoup
from random import randint, vonmisesvariate
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import Select
from selenium.webdriver.common.alert import Alert
from tkinter import EXCEPTION, constants, filedialog
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support.wait import WebDriverWait
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.expected_conditions import alert_is_present
from selenium.webdriver.common.action_chains import ActionChains
from selenium.common.exceptions import ElementNotSelectableException, NoAlertPresentException

#https://sites.google.com/chromium.org/driver/downloads
os.chdir('C:\\PaulistaDigit\\')

DirTerm = 'C:\\PaulistaDigit\\termos\\'

RG = 'C:\\PaulistaDigit\\rg.jpg'
trmo = 'C:\\PaulistaDigit\\img\\Untitled1.pdf'

cfyml = 'config.yaml'
img_path = 'C:\\PaulistaDigit\\img\\'
resultado_csv = 'ResultadoConsultaCSV.csv'
qtd_uf = 'logs\\uf.csv'

# licença
pth_bloq = 'C:\\ProgramData\\Dig-bin'
qtd_cons = 'C:\\ProgramData\\Dig-bin\\vl.csv'
cred = 'C:\\ProgramData\\Dig-bin\\sptx.json'

scope = ['https://spreadsheets.google.com/feeds']

credentials = ServiceAccountCredentials.from_json_keyfile_name(cred, scope)

gc = gspread.authorize(credentials)
wks = gc.open_by_key('1kINeC8H-0A7_VrsQtpthWS1gM6Kylb38nzDwhJf4nHI')

# Seleciona a primeira página da planilha
nb_abas = 0
worksheet = wks.get_worksheet(nb_abas)

cell = worksheet.findall('user')
credent = 'Dig_yamoto'
cell = worksheet.find(credent)
colum = 2
val = worksheet.cell(cell.row, colum).value



stream = open(cfyml, 'r')
c = yaml.safe_load(stream)
ct = c['threshold']
pause = c['time_intervals']['interval_between_moviments']
pyautogui.PAUSE = pause



# LOGIN BANCOSEGURO
with open('user.csv', 'r') as csv_file:
    csv_dict = csv.DictReader(csv_file, delimiter=';')
    for lin in csv_dict:
        usuario = lin['nome']
        senha = lin['senha']
        API_KEY = lin['api']
        
# CELULAR
# SELECIONAR ARQUIVO
if os.path.isfile(qtd_cons):
    with open(qtd_cons, "r") as fa:
        lines = fa.readlines()
else:
    f = open(qtd_cons, 'w')
    f.write('0')
    f.close()
    with open(qtd_cons, "r") as fa:
        lines = fa.readlines()

        
# CELULAR
# SELECIONAR ARQUIVO
print(f'Total de Consultas realizadas: {lines[0]}')


Endereco = sg.popup_get_file('Selecione o arquivo csv')

if Endereco == None:
    print('Finalizando...')
    exit(69)
    
Caminho_Arquivo = Path(Endereco)

date = str(datetime.datetime.fromtimestamp(int(time.time())).strftime('%Y-%m-%d %H:%M:%S'))
print(date)

if os.path.isdir(pth_bloq):
    print("...")
else:
    exit(69)

driver = webdriver.Firefox()

WbW = WebDriverWait(driver, 30)



# ABRIR ABA Banco


def Login():
    WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.ID, 'EUsuario_CAMPO')))
    driver.find_element(By.ID,'EUsuario_CAMPO').send_keys(usuario)
    time.sleep(1)
    driver.find_element(By.ID,'ESenha_CAMPO').click()
    time.sleep(1)
    driver.find_element(By.ID,'ESenha_CAMPO').send_keys(senha)
    time.sleep(1)

    # ENTRAR
    driver.find_element(By.ID,'lnkEntrar').click()
    # clicar no menu
    time.sleep(2)

def aba_liberar():
    try:
        WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, '//*[@id="navbar-collapse-funcao"]/ul/li[5]')))
        driver.find_element(By.XPATH, '//*[@id="navbar-collapse-funcao"]/ul/li[5]').click()
        driver.find_element(By.XPATH, '//*[@id="WFP2010_MTDDSBENEF"]').click()
    except:
        driver.find_element(By.XPATH, '//*[@id="navbar-collapse-funcao"]/ul/li[5]').click()
        driver.find_element(By.XPATH, '//*[@id="WFP2010_MTDDSBENEF"]').click()

def nova_tab():
    winds = driver.window_handles
    driver.switch_to.window(winds[0])
    time.sleep(1)
    driver.execute_script("window.open('https://consignado.bancopaulista.com.br/WebAutorizador/Login/', '_blank')")
    driver.implicitly_wait(30)
    winds = driver.window_handles
    driver.switch_to.window(winds[1])

def print_time(delay, counter):

    while counter:
        time.sleep(delay)
        nova_tab()
        aba_liberar()
        counter -= 1

def Liberar_termo(CPF, Nome):

    id_CPF="ctl00_Cph_jp1_pnlDadosBeneficiario_Container_AbaTermoAutorizacao_txtCpfCli_CAMPO"
    id_Nome="ctl00_Cph_jp1_pnlDadosBeneficiario_Container_AbaTermoAutorizacao_txtNomeCli_CAMPO"
    id_DDD="ctl00_Cph_jp1_pnlDadosBeneficiario_Container_AbaTermoAutorizacao_txtDDD_CAMPO"
    id_LOCAL="ctl00_Cph_jp1_pnlDadosBeneficiario_Container_AbaTermoAutorizacao_txtLocalAssTermo_CAMPO"
    alet = randint(1,100)
    
    email = Nome.lower().replace(" ","_")+str(alet)+"@gmail.com.br"
    Local = ['Belém', 'Boa Vista', 'Macapá', 'Manaus', 'Palmas', 'Porto Velho', \
         'Rio Branco', 'Aracaju', 'Fortaleza', 'João Pessoa', 'Maceió', 'Natal',\
         'Recife', 'Salvador', 'São Luís', 'Teresina', 'Brasília','Campo Grande',\
         'Cuiabá', 'Goiânia', 'Belo Horizonte', 'Rio de Janeiro', 'São Paulo',\
         'Vitória', 'Curitiba', 'Florianópolis', 'Porto Alegre']

    WebDriverWait(driver, 6).until(EC.element_to_be_clickable((By.ID, id_CPF)))
    try:
        driver.find_element(By.ID,id_CPF).clear()
        
    except:
        None
    time.sleep(1)
    driver.find_element(By.XPATH, '//*[@id="ctl00_Cph_jp1_pnlDadosBeneficiario_Container_AbaTermoAutorizacao_rdlTipoTermo_1"]').click()
    #CPF do Cliente:
    time.sleep(1)
    driver.find_element(By.ID,id_CPF).send_keys(CPF)
    time.sleep(1)
    driver.find_element(By.ID,id_Nome).click()
    alr = alerta_P()

    if 'CPF' in alr:
        driver.find_element(By.ID,id_CPF).send_keys(CPF)
        time.sleep(1)
        driver.find_element(By.ID,id_Nome).click()

    driver.implicitly_wait(10)
    time.sleep(3)
    try:
        driver.find_element(By.ID,id_Nome).clear()
    except:
        pass
    driver.find_element(By.XPATH, '//*[@id="ctl00_Cph_jp1_pnlDadosBeneficiario_Container_AbaTermoAutorizacao_rdlTipoTermo_1"]').click()
    #Nome do Cliente:
    WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.ID, id_Nome)))
    driver.find_element(By.ID,id_Nome).send_keys(Nome)
    time.sleep(1)
    driver.find_element(By.ID,id_DDD).click()
    time.sleep(1)

    #LOCAL
    WebDriverWait(driver, 6).until(EC.element_to_be_clickable((By.ID, id_LOCAL)))
    driver.find_element(By.ID,id_LOCAL).clear()
    driver.find_element(By.ID,id_LOCAL).send_keys(Local[randint(0,26)])
    time.sleep(1)
    
    

    time.sleep(1)
    
    # ENVIAR ASSINATURA ELETRONICA
    driver.find_element(By.ID,"btnImprimirTermo_txt").click()
    
    time.sleep(10)
    alerta_P()

def alerta_P():
    try:
        alerta = WebDriverWait(driver, 5).until(alert_is_present())
        time.sleep(1)
        texto_alerta = driver.switch_to.alert.text
        time.sleep(1)
        driver.switch_to.alert.accept()
        return texto_alerta
    except:
        texto_alerta = 'Termo de Autorização enviado para Assinatura Digital com sucesso!'
        return texto_alerta

def addRandomness(n, randomn_factor_size=None):
    """Returns n with randomness
    Parameters:
        n (int): A decimal integer
        randomn_factor_size (int): The maximum value+- of randomness that will be
            added to n

    Returns:
        int: n with randomness
    """

    if randomn_factor_size is None:
        randomness_percentage = 0.1
        randomn_factor_size = randomness_percentage * n

    random_factor = 2 * random() * randomn_factor_size
    if random_factor > 5:
        random_factor = 5
    without_average_random_factor = n - randomn_factor_size
    randomized_n = int(without_average_random_factor + random_factor)
    # logger('{} with randomness -> {}'.format(int(n), randomized_n))
    return int(randomized_n)

def moveToWithRandomness(x,y,t):
    pyautogui.moveTo(addRandomness(x,10),addRandomness(y,10),t+random()/2)

def remove_suffix(input_string, suffix):
    """Returns the input_string without the suffix"""

    if suffix and input_string.endswith(suffix):
        return input_string[:-len(suffix)]
    return input_string

def load_images(dir_path=img_path):
    """ Programatically loads all images of dir_path as a key:value where the
        key is the file name without the .png suffix

    Returns:
        dict: dictionary containing the loaded images as key:value pairs.
    """

    file_names = listdir(dir_path)
    targets = {}
    for file in file_names:
        path = dir_path + file
        # print(f'Aqui a Img: {file}')
        targets[remove_suffix(file, '.png')] = cv2.imread(path)

    return targets

def clickBtn(img, timeout=3, threshold = ct['default']):
    """Search for img in the scree, if found moves the cursor over it and clicks.
    Parameters:
        img: The image that will be used as an template to find where to click.
        timeout (int): Time in seconds that it will keep looking for the img before returning with fail
        threshold(float): How confident the bot needs to be to click the buttons (values from 0 to 1)
    """

    logger(None, progress_indicator=True)
    start = time.time()
    has_timed_out = False
    while(not has_timed_out):
        matches = positions(img, threshold=threshold)

        if(len(matches)==0):
            has_timed_out = time.time()-start > timeout
            continue

        x,y,w,h = matches[0]
        pos_click_x = x+w/2
        pos_click_y = y+h/2
        moveToWithRandomness(pos_click_x,pos_click_y,1)
        pyautogui.click()
        return True

    return False    
  
def printSreen():
    with mss.mss() as sct:
        monitor = sct.monitors[0]
        sct_img = np.array(sct.grab(monitor))
        # The screen part to capture
        # monitor = {"top": 160, "left": 160, "width": 1000, "height": 135}

        # Grab the data
        return sct_img[:,:,:3]

def positions(target, threshold=ct['default'],img = None):
    if img is No'
love = ''
god = '       None
    try:
        Beneficio = driver.find_element(By.XPATH,'//*[@id="ctl00_Cph_jp1_pnlDadosBeneficiario_Container_ConsultaDadosBeneficio_grdListBenefCli"]/tbody/tr[2]/td[1]/span').text
        #consulta.loc[ind_base, 'MATRICULA'] = Beneficio
        print(f'Beneficío 1: {Beneficio}')

        Elegivel = driver.find_element(By.ID,'ctl00_Cph_jp1_pnlDadosBeneficiario_Container_ConsultaDadosBeneficio_grdListBenefCli_ctl02_lblElegEmpre').text
        # consulta.loc[ind_base, 'ELEGÍVEL'] = Elegivel

        Bloqueado = driver.find_element(By.ID,'ctl00_Cph_jp1_pnlDadosBeneficiario_Container_ConsultaDadosBeneficio_grdListBenefCli_ctl02_lblBloqEmpr').text
        #consulta.loc[ind_base, 'BLOQUEADO'] = Bloqueado

        Despacho = driver.find_element(By.ID,'ctl00_Cph_jp1_pnlDadosBeneficiario_Container_ConsultaDadosBeneficio_grdListBenefCli_ctl02_lblDtDespBenef').text
        # consulta.loc[ind_base, 'DESPACHO'] = Despacho
    

        #consulta.loc[ind_base, 'ASSINATURA'] = "ASSINADO"

        if (Elegivel == 'Não') or (Bloqueado == 'Sim'):

            consulta.loc[ind_base, 'STATUS'] = "BLOQUEADO EMPRESTIMO"


        consulta.to_csv(Caminho_Arquivo, sep=';', index=False)

        qtd_benf = driver.find_elements(By.XPATH,'//*[@id="ctl00_Cph_jp1_pnlDadosBeneficiario_Container_ConsultaDadosBeneficio_grdListBenefCli"]/tbody/tr')

        for j in range(2,len(qtd_benf)+1,1):

            if j > 2:

                ind_novo = len(consulta.index)

                Beneficio = driver.find_element(By.XPATH,f'//*[@id="ctl00_Cph_jp1_pnlDadosBeneficiario_Container_ConsultaDadosBeneficio_grdListBenefCli"]/tbody/tr[{j}]/td[1]/span').text
                # consulta.loc[ind_novo, 'MATRICULA'] = Beneficio
                print(f'Beneficío {j-1}: {Beneficio}')

                Elegivel = driver.find_element(By.ID,f'ctl00_Cph_jp1_pnlDadosBeneficiario_Container_ConsultaDadosBeneficio_grdListBenefCli_ctl0{j}_lblElegEmpre').text
                # consulta.loc[ind_novo, 'ELEGÍVEL'] = Elegivel

                Bloqueado = driver.find_element(By.ID,f'ctl00_Cph_jp1_pnlDadosBeneficiario_Container_ConsultaDadosBeneficio_grdListBenefCli_ctl0{j}_lblBloqEmpr').text
                # consulta.loc[ind_novo, 'BLOQUEADO'] = Bloqueado

                Despacho = driver.find_element(By.ID,f'ctl00_Cph_jp1_pnlDadosBeneficiario_Container_ConsultaDadosBeneficio_grdListBenefCli_ctl0{j}_lblDtDespBenef').text
                # consulta.loc[ind_novo, 'DESPACHO'] = Despacho

                #consulta.loc[ind_novo, 'ASSINATURA'] = "ASSINADO"

                if (Elegivel == 'Não') or (Bloqueado == 'Sim'):

                    consulta.loc[ind_novo, 'STATUS'] = "BLOQUEADO EMPRESTIMO"

                matricula = driver.find_element(By.XPATH,f'//*[@id="ctl00_Cph_jp1_pnlDadosBeneficiario_Container_ConsultaDadosBeneficio_grdListBenefCli"]/tbody/tr[{j}]/td[1]/span').text

                consulta.to_csv(Caminho_Arquivo, sep=';', index=False)
    except:
        consulta.loc[ind_base, 'STATUS'] = "BLOQUEADO EMPRESTIMO"
        consulta.to_csv(Caminho_Arquivo, sep=';', index=False )
        


    fim = time.time()
    print('')
    print(f'Tempo total de: {fim-inicio:.1f} segundos')


def Liberar_cli(ind_base, linha, aba_banco):      
    print('Liberando')
    print('#__________________')
        
    CPF = linha["CPF"]
    Nome = linha['Nome']
    
    
    driver.switch_to.window(aba_banco)
        
    # IR ABA TERMO DE AUTORIZACAO 'ctl00_Cph_jp1_pnlDadosBeneficiario_Container_AbaTermoAutorizacao_btnAssinaturaDigital'
    id_termo_autorizacao = "__tab_ctl00_Cph_jp1_pnlDadosBeneficiario_Container_AbaTermoAutorizacao"
    driver.find_element(By.ID,id_termo_autorizacao).click()
        
    time.sleep(1)
        
    texto_alerta= Liberar_termo(CPF, Nome)

    time.sleep(1)
    pst = 'sim'
        
    if texto_alerta == 'Já existe um Termo de Autorização de Consulta de Dados do Beneficiário emitido e válido para este cliente. Deseja realizar uma nova emissão?':

        print(texto_alerta)
            
        texto_alerta= Liberar_termo(CPF, Nome)
        
        if texto_alerta != 'Termo de Autorização enviado para Assinatura Digital com sucesso!':
            # ERRO AO LIBERAR
            pst = 'nao'
            reiniciar_aba_ass()
            consulta.loc[ind_base, 'STATUS'] = "ERRO DE CONSULTA"
            consulta.to_csv(Caminho_Arquivo, sep=';', index=False)

    if pst == 'sim':     
        try:
            Error = ir_banco()
        except:
            reiniciar_aba_ass()
            Error = ir_banco()
        
        if Error == 'Erro':
                
            
            consulta.loc[ind_base, 'STATUS'] = "BLOQUEADO EMPRESTIMO"
            print('Erro')
                
            fim = time.time()
            print('')
            print(f'Tempo total de: {fim-inicio:.1f} segundos')
            consulta.to_csv(Caminho_Arquivo, sep=';', index=False)
    
            
        consulta.loc[ind_base, 'STATUS'] = "LIBERADO"

        consulta.to_csv(Caminho_Arquivo, sep=';', index=False)
        print('Liberado')

def Selector(Id,Num,Text):
    WebDriverWait(driver, 15).until(EC.element_to_be_clickable((By.ID, Id)))
    time.sleep(0.5)
    for h in range(4):
        driver.find_element(By.ID,Id).click()
        time.sleep(0.5)
        select = Select(driver.find_element(By.ID,Id))
        #time.sleep(0.5)
        try:
            select.select_by_index(Num)
            #time.sleep(0.5)
        except:
            continue
                    
        if driver.find_element(By.ID,Id).get_attribute('value') == Text:
            break   


def Selector_por_nome(id_parse,uf,Class):
    uff = driver.find_element(By.ID,id_parse)
    html = uff.get_attribute('outerHTML')
    uff = BeautifulSoup(html, 'html.parser')
    stat_table = uff.find_all('select', class_=Class)

    len(stat_table)
    stat_table = stat_table[0]
    qtd2 = 0
    #print(stat_table)
    try:
        os.remove(qtd_uf)
    except:
        print('nada aqui')
    f = open(qtd_uf, 'a+')
    f.write('name' + ';' + 'id' + '\n')
    for row in stat_table.find_all('option'):
        f = open(qtd_uf, 'a+')
        f.write(row.text + ';' + str(qtd2) + '\n')
        f.close()
        qtd2 = qtd2 + 1

    with open(qtd_uf, 'r') as rd_l:
        csv_dict = csv.DictReader(rd_l, delimiter=';')
        for lin in csv_dict:
            name = lin['name']
            id3 = lin['id']
            if name == uf:
                print(f'aqui .{name}')
                
                Selector(id_parse,id3,name)

                            

def Consultar_cli(ind_base, linha2):
    print('Digitando')
    print('_______')

    # IR ABA BANCO
    # driver.switch_to.window(aba_banco2)
    winds = driver.window_handles
    driver.switch_to.window(winds[1])
                

    CPF = linha2["CPF"]
    Nome = linha2['Nome']
    Tipo_d_Opera = linha2['Tipo_de_Operacao']
    GrupoConvenio =linha2['GrupoConvenio']
    Nasc = linha2['DataNascimento']
    Matricula = linha2['Matricula']
    Renda = linha2['RendaLiquida']
    Dt_contraCheq = linha2['Data_Contracheque']
    Naturalidade = linha2['Naturalidade']
    Sexo = linha2['Sexo']
    EstadoCivil = linha2['EstadoCivil']
    Tipo_de_Doc = linha2['Tipo_de_Doc']
    Rg = linha2['Numero_Documento']
    Emissor = linha2['Emissor']
    Uf = linha2['UF']
    Data_Emissao = linha2['DataEmissao']
    Mae = linha2['Mae']
    Ddd = linha2['DDD']
    Celular = linha2['Celular']
    Cep = linha2['CEP']
    Endereco = linha2['Endereco']
    Numero = linha2['Numero']
    Bairro = linha2['Bairro']
    Cidade = linha2['Cidade']
    Prazo = linha2['Prazo']
    Valor_Parcela = linha2['ValorParcela']
    
    

    print(f"2 do conculta Índice Base: {ind_base}")
    print(f"CPF do Cliente: {CPF}")
    print(f"Nome do Cliente: {Nome}")
    print(f"Nasc: {Nasc}")


                
    try:
        # tipo de operacao
        id_tipo_oper = 'ctl00_Cph_UcPrp_FIJN1_JnDadosIniciais_UcDIni_cboTipoOperacao_CAMPO'
        Selector(id_tipo_oper,1,'Proposta Nova')
        # Grupo de Convênio:
        time.sleep(0.5)
        id_convenio = 'ctl00_Cph_UcPrp_FIJN1_JnDadosIniciais_UcDIni_cboGrupoConvenio_CAMPO'
        Selector(id_convenio,2,'INSS')
        # orgao
        id_orgao = 'ctl00_Cph_UcPrp_FIJN1_JnDadosIniciais_UcDIni_cboOrigem5_CAMPO'
        Selector(id_orgao,1,'000001 - INSS - APOSENTADORIA')
        
        # cpf
        driver.find_element(By.ID,'ctl00_Cph_UcPrp_FIJN1_JnDadosIniciais_UcDIni_txtCPF_CAMPO').send_keys(CPF)

        
        # Nascimento
        id_nasc = 'ctl00_Cph_UcPrp_FIJN1_JnDadosIniciais_UcDIni_txtDataNascimento_CAMPO'

        WebDriverWait(driver, 4).until(EC.element_to_be_clickable((By.ID, id_nasc))).click()
        time.sleep(3)
        for i in range(3):
            nasc = driver.find_element(By.ID, id_nasc).text
            if nasc == '':
                driver.find_element(By.ID, id_nasc).send_keys(Nasc)
                break
            time.sleep(0.5)
        # Matriicula
        driver.find_element(By.ID,'ctl00_Cph_UcPrp_FIJN1_JnDadosIniciais_UcDIni_ucMatricula_txtMatricula_CAMPO').send_keys(Matricula)

        # renda
        driver.find_element(By.ID,'ctl00_Cph_UcPrp_FIJN1_JnDadosIniciais_UcDIni_txtRenda_CAMPO').send_keys(Renda)

        # contra cheque
        id_contra_cheq = 'ctl00_Cph_UcPrp_FIJN1_JnDadosIniciais_UcDIni_txtDataContraCheque_CAMPO'
        WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.ID, id_contra_cheq))).click()
        time.sleep(3)
        driver.find_element(By.ID,id_contra_cheq).send_keys(Dt_contraCheq)
        # obter margem
        id_margem ='btnObterMargem_txt'
        driver.find_element(By.ID,id_margem).click()
        # vl_margem
        id_vl_margem = 'ctl00_Cph_UcPrp_FIJN1_JnDadosIniciais_UcDIni_txtValorMargem_CAMPO'
        for i in range(25):
            vl = driver.find_element(By.ID,id_vl_margem)
            Mrg = vl.get_attribute('value')
            if Mrg != '':
                print(f'Valor da Margem = {Mrg}')
                break
            time.sleep(1)
        

        # Nome
        time.sleep(2)
        id_nome = 'ctl00_Cph_UcPrp_FIJN1_JnDadosCliente_UcDadosPessoaisClienteSnt_FIJN1_JnC_txtNome_CAMPO'
        for i in range(3):
            nm_txt = driver.find_element(By.ID,id_nome)
            Nm = nm_txt.get_attribute('value')
            if Nm != '':
                driver.find_element(By.ID,id_nome).clear()
                driver.find_element(By.ID,id_nome).send_keys(Nome)
                bre'
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
